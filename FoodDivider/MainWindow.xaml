<Controls:MetroWindow xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"  x:Class="FoodDivider.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:local="clr-namespace:FoodDivider.Model"
        mc:Ignorable="d ignore"
       Width="405.969"
        Height="542.894"
        Title="Food Divider"
        DataContext="{Binding Main, Source={StaticResource Locator}}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />

                <ResourceDictionary Source="Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="columnStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                <Setter Property="FontSize" Value="24" />
                <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <materialDesign:DialogHost Identifier="RootDialog" >
        <Grid x:Name="LayoutRoot" >

            <Grid.RowDefinitions>

                <RowDefinition Height="5*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>

            <DataGrid  Margin="0,0,0,0" ItemsSource="{Binding FoodList}"  CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False"
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8" SelectedValue="{Binding SelectedFood, UpdateSourceTrigger=PropertyChanged}" materialDesign:ValidationAssist.UsePopup="True"  materialDesign:DataGridAssist.ColumnHeaderPadding="8" materialDesign:DataGridAssist.EnableEditBoxAssist="False" Grid.RowSpan="1">
                <DataGrid.ContextMenu>
                    <ContextMenu >
                        <MenuItem Header="New" Command="{Binding AddFoodCommand}" CommandParameter="{x:Static local:WindowArgument.New}"  />
                        <MenuItem Header="Edit" Command="{Binding AddFoodCommand}" CommandParameter="{x:Static local:WindowArgument.Edit}"  />

                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns >
                    <materialDesign:MaterialDataGridTextColumn FontSize="24"  Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                                               Header="Name"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               HeaderStyle="{StaticResource columnStyle}" />
                    <materialDesign:MaterialDataGridTextColumn FontSize="24" Binding="{Binding Price}"
                                                               Header="Price"                                                      
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               HeaderStyle="{StaticResource columnStyle}" />


                    <materialDesign:MaterialDataGridTextColumn  FontSize="24" Binding="{Binding ProcentageUsed}"
                                                               Header="% used"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               HeaderStyle="{StaticResource columnStyle}" />
                </DataGrid.Columns>

            </DataGrid>
            <!--<ListView Margin=" 0,10,0,0" Foreground="{StaticResource AccentColorBrush}" BorderThickness="0" ItemsSource="{Binding FoodList, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="3">

            <ListView.ItemTemplate>
                <DataTemplate>

                    <materialDesign:Card Margin="5,0,5,3" Background="{StaticResource AccentColorBrush}" Foreground="White" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBox BorderThickness="0"  Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Grid.Column="0" Margin="10,5,0,4"/>
                            <TextBox BorderThickness="0" Text="{Binding Price,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"></TextBox>
                            <TextBox BorderThickness="0" Text="{Binding ProcentageUsed, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2"></TextBox>
                        </Grid>
                    </materialDesign:Card>

                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>-->
            <Button  Content="Add" HorizontalAlignment="Left" Command="{Binding AddFoodCommand}"  CommandParameter="{x:Static local:WindowArgument.New}" Margin="10,10,0,10" VerticalAlignment="Stretch"  Grid.Row="1" Height="Auto" Width="108" />
            <TextBlock Margin="10,10,10,10" FontWeight="Bold" FontSize="50" Text="{Binding Total, StringFormat={}{0} Kr ,UpdateSourceTrigger= PropertyChanged}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="1" />

        </Grid>
    </materialDesign:DialogHost>
</Controls:MetroWindow>
